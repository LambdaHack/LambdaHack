; This is a copy of the default UI settings config file
; that is embedded in the game binary. A user config file can override
; these options. Option names are case-sensitive and only ';' for comments
; is permitted.
;
; The game looks for the config file at the same path where saved games
; directory is located. E.g. on Linux the file is at
; ~/.LambdaHack/config.ui.ini
; and on Windows it can be at
; C:\Documents And Settings\user\Application Data\LambdaHack\config.ui.ini
; or at
; C:\Users\<username>\AppData\Roaming\LambdaHack\config.ui.ini
; or elsewhere.

[additional_commands]
; Angband compatibility (accept target)
Cmd_2 = ("KP_Insert", ([CmdAim], "", ByAimMode AimModeCmd {exploration = Dashboard, aiming = Accept}))
; Custom key rebinding example:
;
;   Cmd_3 = ("a", ([CmdItem], "My Happy Cmd", Macro ["t"]))
;
; Explanation: to (t)rigger a consumable item for use, you normally use
;              the key press 't'.
; Suppose you would like to use the key press 'a' instead of 't'.
;   Cmd_3          - can be anything starting with 'Cmd_', as long as
;                    it doesn't conflict with a binding already defined
;   "a"            - the new key to use
;   [CmdItem]      - can either be [] or [CmdItem]. If using [CmdItem]
;                    the new keybinding will be displayed in the help menu
;                    in-game alongside other keys related to handling items.
;                    If there is no need to have the new binding displayed
;                    in the help menu, it is recommended to leave this empty []
;   "My Happy Cmd" - Is a name given to your binding, which would be dispayed
;                    in the help page in-game if you use 'CmdItem' from above

[hero_names]
HeroName_0 = ("Haskell Alvin", "he")
HeroName_1 = ("Alonzo Barkley", "he")
HeroName_2 = ("Inés Galenti", "she")
HeroName_3 = ("Ernst Abraham", "he")
HeroName_4 = ("Samuel Saunders", "he")
HeroName_5 = ("Roger Robin", "he")
HeroName_6 = ("Christopher Flatt", "he")
HeroName_7 = ("Simon Wise", "he")
HeroName_8 = ("Daniel Homer", "he")
HeroName_9 = ("Oleg Cracker", "he")

[ui]
; Disable these to free up some keys, if you want to rebind commands
; and/or to avoid moving due to accidental key presses.
movementViKeys_hjklyubn = True
movementLeftHandKeys_axwdqezc = True
; recommended: "binary" or "dejavuBold"
chosenFontset = "dejavuBold"
; 1.0 means don't scale; 1.5, 2.0, 3.0 give good results, <0.7 very bad
; for scales < 1 try fontsets with bolder auxiliary fonts and/or HintingLight
allFontsScale = 1.0
; NotFullscreen (default), BigBorderlessWindow (preferred), ModeChange.
; For 1920×1080 fullscreen, set allFontsScale = 1.5 above.
fullscreenMode = NotFullscreen
; HP percent at which warning is emitted.
hpWarningPercent = 20
; Wrap messages after this column (measured in small font, if available).
; In LambdaHack, not enough height to fit longer messages if wrapped earlier.
msgWrapColumn = 80
; New historyMax takes effect after removal of savefiles.
; Looks best if is divisble by screenful of message (rheight - 4 = 20).
historyMax = 5000
; Frames per second throttled at this value.
maxFps = 24
; Animations when actors act are not displayed.
noAnim = False
; Hardwired commandline arguments to process.
overrideCmdline = ""

[fonts]
; the auxiliary fonts (the format is: kind name size hinting):
binaryRegular = FontProportional "BinarySansProLH-Regular.ttf.woff" 16 HintingHeavy
binaryBold = FontProportional "BinarySansProLH-Semibold.ttf.woff" 16 HintingHeavy
binaryMono = FontMonospace "BinaryCodeProLH-Bold.ttf.woff" 14 HintingHeavy
dejavuRegular = FontProportional "DejaVuLGCSans.ttf.woff" 15 HintingHeavy
dejavuBold = FontProportional "DejaVuLGCSans-Bold.ttf.woff" 13 HintingHeavy
dejavuMono = FontMonospace "Hack-Bold.ttf.woff" 13 HintingHeavy
; the map fonts (the format is: kind name size hinting cellSizeAdd):
; with allFontsScale < 1, try HintingLight for fuzzy, but less distorted shapes:
16x16xwScalable = FontMapScalable "16x16xw.woff" 16 HintingHeavy 0
; the map fonts (the format is: kind name cellSizeAdd):
16x16xwBitmap = FontMapBitmap "16x16xw.bdf" 0
8x8xbBitmap = FontMapBitmap "8x8xb.fnt" 2
8x8xBitmap = FontMapBitmap "8x8x.fnt" 2

[fontsets]
; This is a temporary hack around bitmap font breakage caused by
; https://gitlab.freedesktop.org/freetype/freetype/-/issues/1076
; In a couple of years this can be removed and the small bitmap fonts will work
; fine again, too.
dejavuBold = FontSet {fontMapScalable = "16x16xwScalable", fontMapBitmap = "16x16xwScalable", fontPropRegular = "dejavuBold", fontPropBold = "dejavuBold", fontMono = "dejavuMono"}

; best proportional:
binary = FontSet {fontMapScalable = "16x16xwScalable", fontMapBitmap = "16x16xwBitmap", fontPropRegular = "binaryRegular", fontPropBold = "binaryBold", fontMono = "binaryMono"}
dejavuBold_original = FontSet {fontMapScalable = "16x16xwScalable", fontMapBitmap = "16x16xwBitmap", fontPropRegular = "dejavuBold", fontPropBold = "dejavuBold", fontMono = "dejavuMono"}

; decent proportional:
binaryBold = FontSet {fontMapScalable = "16x16xwScalable", fontMapBitmap = "16x16xwBitmap", fontPropRegular = "binaryBold", fontPropBold = "binaryBold", fontMono = "binaryMono"}
dejavu = FontSet {fontMapScalable = "16x16xwScalable", fontMapBitmap = "16x16xwBitmap", fontPropRegular = "dejavuRegular", fontPropBold = "dejavuBold", fontMono = "dejavuMono"}

; monospace, for people that don't like proportional or many fonts:
binaryMono = FontSet {fontMapScalable = "16x16xwScalable", fontMapBitmap = "16x16xwBitmap", fontPropRegular = "binaryMono", fontPropBold = "binaryMono", fontMono = "binaryMono"}
dejavuMono = FontSet {fontMapScalable = "16x16xwScalable", fontMapBitmap = "16x16xwBitmap", fontPropRegular = "dejavuMono", fontPropBold = "dejavuMono", fontMono = "dejavuMono"}

; square:
16x16xw = FontSet {fontMapScalable = "16x16xwScalable", fontMapBitmap = "16x16xwBitmap", fontPropRegular = "", fontPropBold = "", fontMono = ""}
8x8xb = FontSet {fontMapScalable = "", fontMapBitmap = "8x8xbBitmap", fontPropRegular = "", fontPropBold = "", fontMono = ""}
8x8x = FontSet {fontMapScalable = "", fontMapBitmap = "8x8xBitmap", fontPropRegular = "", fontPropBold = "", fontMono = ""}

[message_colors]
; Prefixes of message class constructor names paired with colors.
; The first prefix that matches, wins.
;
; E.g., uncomment to make all messages white:
; Msg = White

[version]
; If an outdated config file mentions fonts that are not bundled with the game
; any more, the game crashes. To prevent that, one of the first three components
; of the game version should be bumped whenever fonts are changed.
; Configs from old versions are rejected, preventing the crash.
version = 0.11.0
